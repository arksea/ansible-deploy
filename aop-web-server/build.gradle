plugins {
    id 'application'
    id 'java'
}

description = """Ansible Deploy Web Server"""

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenLocal()
    maven {
        allowInsecureProtocol true
        url "http://nexus.arksea.net:8081/nexus/content/groups/public/"
    }
    mavenCentral()
}

configurations.all {
    resolutionStrategy {
        cacheDynamicVersionsFor  1, 'seconds'
        cacheChangingModulesFor  1, 'seconds'
    }
    exclude module: 'logback-classic'
    exclude module: 'log4j-to-slf4j'
}

dependencies {
    implementation 'net.arksea:restapi-base:1.1.2-SNAPSHOT'

    implementation 'com.typesafe.akka:akka-actor_2.12:2.5.11'
    implementation 'com.typesafe.akka:akka-remote_2.12:2.5.11'
    implementation 'com.typesafe.akka:akka-cluster_2.12:2.5.11'
    implementation 'com.typesafe.akka:akka-slf4j_2.12:2.5.11'
    implementation 'org.scala-lang:scala-library:2.12.4'

    implementation 'org.springframework:spring-core:4.3.27.RELEASE'
    implementation 'org.springframework:spring-context:4.3.27.RELEASE'
    implementation 'org.springframework:spring-context-support:4.3.27.RELEASE'
    implementation 'org.springframework:spring-webmvc:4.3.27.RELEASE'

    implementation 'org.springframework.data:spring-data-jpa:1.11.4.RELEASE'
    implementation  'org.hibernate:hibernate-entitymanager:4.3.11.Final'
    implementation  'org.hibernate:hibernate-validator:5.0.3.Final'

    implementation 'org.apache.shiro:shiro-core:1.7.1'
    implementation 'org.apache.shiro:shiro-web:1.7.1'
    implementation 'org.apache.shiro:shiro-spring:1.7.1'
    implementation 'com.auth0:java-jwt:3.2.0'

    implementation 'com.google.guava:guava:17.0'
    implementation 'org.aspectj:aspectjweaver:1.9.5'
    implementation 'org.apache.commons:commons-lang3:3.3.2'
    implementation 'commons-fileupload:commons-fileupload:1.3.2'
    
    implementation 'com.sun.mail:javax.mail:1.6.2'

    implementation 'org.apache.logging.log4j:log4j-api:2.13.3'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.3'
    //Log4j 1.x Bridge to Log4j 2.x
    implementation 'org.apache.logging.log4j:log4j-1.2-api:2.13.3'
    //Apache Commons Logging Bridge to Log4j 2.x
    implementation 'org.apache.logging.log4j:log4j-jcl:2.13.3'
    //slf4j Bridge to Log4j 2.x
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.3'
    //Java Util Logging Bridge to Log4j 2.x
    implementation 'org.apache.logging.log4j:log4j-jul:2.13.3'

    compileOnly  'javax.servlet:javax.servlet-api:3.1.0'

    runtimeOnly 'mysql:mysql-connector-java:5.1.22'
    runtimeOnly 'org.apache.tomcat:tomcat-dbcp:8.0.30'
    runtimeOnly 'commons-dbcp:commons-dbcp:1.4'
    runtimeOnly 'org.apache.commons:commons-pool2:2.2'

    testImplementation 'junit:junit:4.11'
    testImplementation 'org.springframework:spring-test:4.3.27.RELEASE'
    testImplementation 'org.mockito:mockito-core:1.9.5'
}

task ngBuild(type: Exec) {
    workingDir '../aop-web'
    commandLine 'cmd', '/c', 'ng build --prod'
}

//------------------------------------------------------------------------
// QA
task publishQaDel {
    doLast {
        //拷贝前先删除部署目录下所有文件
        File dir = file('publish/qa/')
        dir.listFiles().each {File file ->
            if(file.name!='.svn'){
                println 'delete ' + file.name
                delete file
            }
        }
    }
}

task publishQA {
    dependsOn(publishQaDel,build,ngBuild)
    doLast {
        copy { //拷贝本项目WEB相关文件
            from 'src/main/webapp/'
            into 'publish/qa'
        }
        copy { //拷贝本项目WEB相关文件
            from '../aop-web/dist/aop-web'
            into 'publish/qa'
        }
        copy { //拷贝依赖库
            from configurations.runtimeClasspath
            into 'publish/qa/WEB-INF/lib'
        }
        copy { //拷贝类
            from 'build/classes/java/main/'
            into 'publish/qa/WEB-INF/classes'
        }
        copy { //拷贝资源
            from 'build/resources/main/'
            into 'publish/qa/WEB-INF/classes'
        }
        copy { //拷贝资源
            from 'build/resources/test/'
            into 'publish/qa/WEB-INF/classes'
        }
        copy { //拷贝自定义测试环境配置文件
            from 'publish/config/application.properties'
            into 'publish/qa/WEB-INF/classes/'
        }
        copy { //拷贝自定义测试环境配置文件
            from 'publish/config/application.functional.properties'
            into 'publish/qa/WEB-INF/classes/'
        }
        copy { //拷贝META-INF
            from 'build/tmp/war/'
            into 'publish/qa/META-INF/'
        }
    }
}

//发布部署文件，并提交到部署SVN
task publishToSvnQA(type: Exec) {
    dependsOn publishQA
    commandLine 'cmd', '/c', 'TortoiseProc.exe /command:commit /path:"./publish/qa"'
}


//------------------------------------------------------------------------
//Online
task publishOnlineDel {
    doLast {
        //拷贝前先删除部署目录下所有文件
        File dir = file('publish/online/')
        dir.listFiles().each {File file ->
            if(file.name!='.svn'){
                println 'delete ' + file.name
                delete file
            }
        }
    }
}

task publishOnline {
    dependsOn(publishOnlineDel,build,ngBuild)
    doLast {
        copy { //拷贝本项目WEB相关文件
            from 'src/main/webapp/'
            into 'publish/online'
        }
        copy { //拷贝本项目WEB相关文件
            from '../aop-web/dist/aop-web'
            into 'publish/online'
        }
        copy { //拷贝依赖库
            from configurations.runtimeClasspath
            into 'publish/online/WEB-INF/lib'
        }
        copy { //拷贝类
            from 'build/classes/java/main/'
            into 'publish/online/WEB-INF/classes'
        }
        copy { //拷贝资源
            from 'build/resources/main/'
            into 'publish/online/WEB-INF/classes'
        }
        copy { //拷贝自定义环境配置文件
            from 'publish/config/application.properties'
            into 'publish/online/WEB-INF/classes/'
        }
        copy { //拷贝META-INF
            from 'build/tmp/war/'
            into 'publish/online/META-INF/'
        }
    }
}

//发布部署文件，并提交到部署SVN
task publishToSvnOnline(type: Exec) {
    dependsOn publishOnline
    commandLine 'cmd', '/c', 'TortoiseProc.exe /command:commit /path:"./publish/online"'
}


//------------------------------------------------------------------------
//Development

task ngBuildDev(type: Exec) {
    workingDir '../aop-web'
    commandLine 'cmd', '/c', 'ng build --output-path dist-dev'
}
//拷贝部署文件到指定目录
task publishDev {
    dependsOn(build)
    doLast {
        //拷贝前先删除部署目录
        delete('tomcat/webapps/aop-web-server')
        copy { //拷贝本项目WEB相关文件
            from 'src/main/webapp/'
            into 'tomcat/webapps/aop-web-server'
        }
        copy { //拷贝本项目WEB相关文件
            from '../aop-web/dist-dev'
            into 'tomcat/webapps/aop-web-server'
        }
        copy { //拷贝依赖库
            from configurations.runtimeClasspath
            into 'tomcat/webapps/aop-web-server/WEB-INF/lib'
        }
        delete('tomcat/webapps/aop-web-server/WEB-INF/lib/xml-apis-1.0.b2.jar')
        copy { //拷贝类
            from 'build/classes/java/main/'
            into 'tomcat/webapps/aop-web-server/WEB-INF/classes'
        }
        copy { //拷贝资源
            from 'build/resources/main/'
            into 'tomcat/webapps/aop-web-server/WEB-INF/classes'
        }
        copy { //拷贝资源
            from 'build/resources/test/'
            into 'tomcat/webapps/aop-web-server/WEB-INF/classes'
        }
        copy { //拷贝自定义开发环境配置文件
            from 'publish/config/application.properties'
            into 'tomcat/webapps/aop-web-server/WEB-INF/classes'
        }
        copy { //拷贝自定义开发环境配置文件
            from 'publish/config/application.development.properties'
            into 'tomcat/webapps/aop-web-server/WEB-INF/classes'
        }
        copy { //拷贝META-INF
            from 'build/tmp/war/'
            into 'tomcat/webapps/aop-web-server/META-INF/'
        }
    }
}

task startTomcat(type: Exec) {
    workingDir './tomcat/bin'
    commandLine 'cmd', '/c', 'startup.bat'
    environment CATALINA_HOME: 'e:\\github\\ansible-deploy\\aop-web-server\\tomcat'
}
startTomcat.dependsOn(publishDev)

task debugTomcat(type: Exec) {
    workingDir './tomcat/bin'
    commandLine 'cmd', '/c', 'startup.bat'
    environment CATALINA_HOME: 'e:\\github\\ansible-deploy\\aop-web-server\\tomcat'
    environment REMOTE_DEBUG: '-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005'
}
debugTomcat.dependsOn(publishDev)
